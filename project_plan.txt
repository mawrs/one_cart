☕ CoffeeCart MVP — Concept Document
Mission

Make it radically simpler for coffee shop owners to source everything they need (beans, dairy, pastries, cups, lids) from multiple wholesalers in one place — reducing complexity, saving time, and ensuring more reliable operations.

Why We’re Building This

Running a café is already stressful. Owners juggle suppliers, inventory, staff, and customers. Right now, sourcing wholesale is messy:

Too many suppliers, each with its own ordering method.

Deliveries are unpredictable, causing shortages or overstock.

Prices are opaque and vary wildly.

Quality is inconsistent, with little accountability.

Bookkeeping becomes a nightmare with multiple invoices.

Coffee shops, often small and independent, lack the leverage of big chains. They need a tool that gives them the convenience of Instacart with the trust and transparency of wholesale sourcing.

Problems to Solve

Fragmentation
Owners order from 5–6 vendors weekly. Each uses different portals or phone/email systems.

Unpredictability
Deliveries may be late, incomplete, or inconsistent. Stockouts force last-minute Costco runs.

Quality Assurance
Stale beans, expired dairy, or poor pastries can hurt their brand.

Administrative Burden
Reconciling 5+ invoices weekly drains time and energy.

Limited Discovery
Owners rarely try new suppliers because finding and vetting them is difficult.

Conceptual MVP

A buyer-facing app where café owners can:

Browse products across multiple suppliers.

Add them to a single cart.

See per-supplier and consolidated delivery windows.

Place one order, receive one invoice.

Rate suppliers and flag quality issues.

This first MVP will only simulate the buyer side, with mock supplier/product data, but will capture the essential user flows.

User Flow
1. Browse Catalog

Owners land on a catalog of items.

Categories: Beans, Dairy/Alternatives, Bakery, Disposables (cups/lids).

Each product card shows:

Product name + description

Price + MOQ (Minimum Order Quantity)

Supplier badge (name, verified/unverified, rating stars)

“Add to Cart” button

2. Cart

When items are added, the cart groups them by supplier.

Each supplier section shows its items, with ability to:

Adjust quantities

Remove items

A running total (all suppliers combined) is displayed.

Call to action: Checkout

3. Checkout

Displays a breakdown of supplier ETAs (based on delivery days/cutoffs).

Shows a consolidated delivery window (the latest overlapping window across all suppliers).

Order summary:

Products by supplier

Total cost

Actions: Confirm Order or Go Back

4. Order Confirmation

Confirmation screen thanks the buyer and shows:

Consolidated delivery window

Supplier breakdowns

Download “Invoice” (simplified text version)

Suggested actions:

View Past Orders

Report an Issue

5. Orders (History)

A list of past orders with:

Date/time

Consolidated delivery window

Total spent

Each order expandable to see supplier breakdown and items.

Action: Reorder (adds items back to cart).

6. Report an Issue (QA Flag)

Buyers can select:

“Missing items”

“Damaged/stale”

“Wrong item”

Add a note.

Marks the order for follow-up (MVP just logs it).

Potential UI Screens (Concept Sketches)
Catalog

Grid layout: Product image → name → price → supplier badge → Add button.

Category tabs or dropdown filter at the top.

Cart (Drawer or Page)

Sectioned by supplier.

Line items: product name, qty input, subtotal.

“Remove” option inline.

Footer: total + checkout button.

Checkout

Left column: per-supplier ETA windows.

Right column: consolidated ETA + order summary.

Bottom: confirm order button.

Confirmation

Success message (“Order placed!”).

Big delivery window displayed.

Invoice download button.

Shortcut to “Orders” or “Reorder”.

Orders

List of orders in cards or table.

Expandable to show suppliers + items.

“Reorder” button.

Constraints for MVP

No real suppliers or deliveries — all data mocked.

No backend — all actions stored in local state/localStorage.

No payments — just “checkout” simulation.

No real QA resolution — only the ability to flag issues.

Value Test

The MVP is not about logistics yet. It’s about testing:

Does “one cart, one invoice, consolidated delivery window” resonate with café owners?

Do they like seeing suppliers side-by-side with ratings?

Does the flow feel simpler than juggling 5 supplier portals?